/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project.Form;

import Project.DAO.TablesDAO;
import Project.Entities.Tables;
import ProjectDb.DbUtility;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ManageTable extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyBan
     */
    DefaultTableModel df;
    int idSave = -1;

    public ManageTable() {
        initComponents();

        df = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }

        };
        df.addColumn("STT");
        df.addColumn("Số bàn");
        df.addColumn("Ghi chú");
        df.addColumn("Trạng thái");
        tblDisplay.setModel(df);
        displayTable();
    }

    private void displayTable() {
        df.setRowCount(0);
        TablesDAO tablesDAO = new TablesDAO();
        List<Tables> list = tablesDAO.LoadListTables();
        for (int i = 0; i < list.size(); i++) {
            Tables tables = list.get(i);
            Object[] dt = {tables.getId(), tables.getName(), tables.getNote(), tables.getStatus()};
            df.addRow(dt);
        }
    }

    private void resetForm() {
        txtmessage.setText("");
        txtNoteTable.setText("");
        txtTableNumber.setText("");
        rbCoKhach.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        btnAddTable = new javax.swing.JButton();
        btnDeleteTable = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTableNumber = new javax.swing.JTextField();
        txtNoteTable = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rbCoKhach = new javax.swing.JRadioButton();
        rbTrong = new javax.swing.JRadioButton();
        txtmessage = new javax.swing.JLabel();
        btnrefresh = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý bàn");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý bàn");

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/back_to_24px.png"))); // NOI18N
        btnHome.setText("Quay lại");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnAddTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAddTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/add_24px.png"))); // NOI18N
        btnAddTable.setText("Thêm bàn");
        btnAddTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTableActionPerformed(evt);
            }
        });

        btnDeleteTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDeleteTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/waste_24px.png"))); // NOI18N
        btnDeleteTable.setText("Xóa bàn");
        btnDeleteTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTableActionPerformed(evt);
            }
        });

        tblDisplay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID bàn", "Số bàn", "Ghi Chú", "Trạng thái"
            }
        ));
        tblDisplay.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisplay);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Ghi Chú :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Số bàn :");

        txtTableNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtNoteTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/edit_property_24px.png"))); // NOI18N
        btnUpdate.setText("Sửa bàn");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Trạng thái :");

        buttonGroup1.add(rbCoKhach);
        rbCoKhach.setSelected(true);
        rbCoKhach.setText("Đã có khách");

        buttonGroup1.add(rbTrong);
        rbTrong.setText("Còn trống");

        txtmessage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtmessage.setForeground(new java.awt.Color(255, 0, 0));
        txtmessage.setText(" ");

        btnrefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnrefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/reset_24px.png"))); // NOI18N
        btnrefresh.setText("Làm mới");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnHome)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtmessage, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rbCoKhach)
                                .addGap(18, 18, 18)
                                .addComponent(rbTrong))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNoteTable, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTableNumber))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAddTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteTable, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtmessage)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTableNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoteTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbCoKhach)
                    .addComponent(rbTrong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddTable, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteTable, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:   
        dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnAddTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTableActionPerformed
        // TODO add your handling code here:
        if (txtTableNumber.getText().isEmpty()) {
            txtmessage.setText("Bạn chưa nhập tên bàn!");
            return;
        }
        Connection con = DbUtility.openConnection();
        try {
            Statement stmt = con.createStatement();
            int i = stmt.executeUpdate("INSERT INTO tblTables(name, note, status) VALUES ('" + txtTableNumber.getText() + "','" + txtNoteTable.getText() + "','" + rbTrong.isSelected() + "')");
            if (i > 0) {
                JOptionPane.showMessageDialog(null, "Thêm mới thành công!");
                displayTable();
            } else {
                JOptionPane.showMessageDialog(null, "Lỗi!!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageTable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddTableActionPerformed

    private void btnDeleteTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTableActionPerformed
        // TODO add your handling code here:
        Connection con;
        PreparedStatement pstmt;

        if (idSave >= 0) {
            con = DbUtility.openConnection();
            try {
                int confirm = JOptionPane.showConfirmDialog(ManageTable.this, "Bạn có chắc chắn muốn xóa không!!");
                if (confirm == JOptionPane.YES_OPTION) {
                    pstmt = con.prepareStatement("Delete from tblTables where id=?");
                    pstmt.setInt(1, idSave);
                    int i = pstmt.executeUpdate();
                    if (i > 0) {
                        JOptionPane.showMessageDialog(this, "Xóa thành công");
                        displayTable();
                        resetForm();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa thất bại!!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageTable.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn bàn cần xóa!!");
        }
    }//GEN-LAST:event_btnDeleteTableActionPerformed

    private void tblDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayMouseClicked

        // TODO add your handling code here:
//        int row = tblDisplay.getSelectedRow();
//        List<Tables> listTable = TablesDAO.getInstance().LoadListTables();
//        idSave = listTable.get(row).getId();
//        String name = txtTableNumber.setText(tblDisplay.getValueAt(row, 1) + "");
//        String note = txtNoteTable.setText(tblDisplay.getValueAt(row, 2) + "");
//        int row = tblDisplay.getSelectedRow();
//        String id = tblDisplay.getValueAt(row, 0).toString();
        int row = tblDisplay.getSelectedRow();
        TablesDAO dao = new TablesDAO();
        List<Tables> listTable = dao.LoadListTables();
        idSave = listTable.get(row).getId();
        String name = tblDisplay.getValueAt(row, 1).toString();
        String note = tblDisplay.getValueAt(row, 2).toString();
        String status = tblDisplay.getValueAt(row, 3).toString();

        txtTableNumber.setText(name);
        txtNoteTable.setText(note);
        if (status.equalsIgnoreCase("Đã có khách")) {
            rbCoKhach.setSelected(true);
            rbTrong.setSelected(false);
        } else {
            rbCoKhach.setSelected(false);
            rbTrong.setSelected(true);
        }
    }//GEN-LAST:event_tblDisplayMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        // TODO add your handling code here:
        if (idSave >= 0) {
            Connection con;
            PreparedStatement pstmt;
            con = DbUtility.openConnection();

            try {
                pstmt = con.prepareStatement("update tblTables set name=?, note=?,status=? where id=?");
                pstmt.setString(1, txtTableNumber.getText());
                pstmt.setString(2, txtNoteTable.getText());
                pstmt.setBoolean(3, rbCoKhach.setSelected());
                pstmt.setInt(4, idSave);

                int i = pstmt.executeUpdate();
                if (i > 0) {
                    JOptionPane.showMessageDialog(null, "Cập nhật thành công!!");
                    displayTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Cập nhật thất bại!!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageTable.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn bàn cần sửa!!");
        }
//     
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        // TODO add your handling code here:

        resetForm();
        displayTable();
    }//GEN-LAST:event_btnrefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ManageTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ManageTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ManageTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ManageTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageTable().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTable;
    private javax.swing.JButton btnDeleteTable;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnrefresh;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbCoKhach;
    private javax.swing.JRadioButton rbTrong;
    private javax.swing.JTable tblDisplay;
    private javax.swing.JTextField txtNoteTable;
    private javax.swing.JTextField txtTableNumber;
    private javax.swing.JLabel txtmessage;
    // End of variables declaration//GEN-END:variables

}
